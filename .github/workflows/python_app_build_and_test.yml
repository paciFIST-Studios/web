# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python Application Build And Test Workflow

on:
  push:
    branches: [ production, dev ]

jobs:
  build_and_test:

    name: Lint and Automated Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unittest
      run: |
        python3 -m unittest discover


#  dump_context:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Dump GitHub context
#        env:
#          GITHUB_CONTEXT: ${{ toJSON(github) }}
#        run: echo "$GITHUB_CONTEXT"
#      - name: Dump job context
#        env:
#          JOB_CONTEXT: ${{ toJSON(job) }}
#        run: echo "$JOB_CONTEXT"
#      - name: Dump steps context
#        env:
#          STEPS_CONTEXT: ${{ toJSON(steps) }}
#        run: echo "$STEPS_CONTEXT"
#      - name: Dump runner context
#        env:
#          RUNNER_CONTEXT: ${{ toJSON(runner) }}
#        run: echo "$RUNNER_CONTEXT"
#      - name: Dump strategy context
#        env:
#          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
#        run: echo "$STRATEGY_CONTEXT"
#      - name: Dump matrix context
#        env:
#          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
#        run: echo "$MATRIX_CONTEXT"


  deploy_to_server:
    name: Deploy To Production Server

    if: ${{ github.ref == 'refs/heads/production' }}
    needs: build_and_test
    runs-on: ubuntu-latest

    steps:
#      - run: echo 'test followup job'
      - name: SSH Remote Commands
#        uses: appleboy/ssh-action@master
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.BLOG_SERVER }}
          username: ${{ secrets.BLOG_SERVER_USERNAME }}
          key: ${{ secrets.BLOG_SERVER_KEY }}
          port: ${{ secrets.BLOG_SERVER_PORT }}
          script: |
            cd web.git
            git pull origin production
            git status
